
#Pointer #Array 

1. The output would be: 
   8 8
   4 4
   0  0
   2 2
2. 4
3. ref is the address of the first element in the pointer ref
ref + 1 is the address of the second element and ++ref pointer to the second elements' address
4. a. 12  16 b. 12 14
5. a.12 16 b. 12 14
6. a. grid[22]  [56]      
b.grid[22][0]   grid[22] 
c.grid[0] grid[0][0] *grid
7. a. int digits[10];
   b. floats [6];
   c. int mat[3][5];
   d. char psa[20];
   e. char (*pster)[20];
8. a. int six[6] = {1, 2, 4, 8, 16, 32};
   b. six[2]
   c.int hund[100] = {{[99] = -1};}
   d.int hund[100] = {[5] = 101 [10] = 101, 101, 101, 101};
9. 0-9
10. Valid one is a. e. h.
11. int ar[800][600]
12. a. void trot_tra(double [], int n); void trot_vla(int a, trots [a]);
    b. void clops_tra(short [][30], int n); void clops_vla(int a,int b, short [a][b]); 
    c. void shots_tra(long [][10][15], int n) shots_vla(int n, int m, int a, shots[n][m][a]);
13.a.int *ptr;
ptr = (int []) = {8, 3, 9, 2};
show(ptr, 4)
b.show2((const doube [][3]) = {{8, 3, 9},{5, 4, 1}}, 2 );


